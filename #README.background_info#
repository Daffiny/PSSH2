Background info 
===============

pdb_full creation steps:
------------------------

1) Creation of non redundant FASTA file of PDB SEQRES records. Non redundant because IDs of chains with identical SEQRES sequence are mentioned in header of one record (ID of the structure with the highest resolution is first), using modified HH-suite script "pdb2fast.pl" ("pdb2fasta.non_redundant_chains_AS.pl"):
/mnt/project/aquaria/HHblits_Psi-BLAST_compare/scripts/hhsuite-2.0.13/scripts$ ./pdb2fasta.non_redundant_chains_AS.pl '/mnt/project/aliqeval/hhblits/hhsuite-2.0.13/scripts/pdb_links/*.ent' /mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/files/pdb_non_redundant_chains.fas
Globbing... found 81103 files
Written 53582 chains to /mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/files/pdb_non_redundant_chains.fas
In this way the number of sequences to run HHblits with was reduced (from 81103 to 53582), so considerable computation time has been saved.

* '/mnt/project/aliqeval/hhblits/hhsuite-2.0.13/scripts/pdb_links/*.ent' are symlinks to the files is: /mnt/project/rost_db/data/pdb/entries (created by Benjamin)
** all pdb seqres sequences are also here: /mnt/project/rost_db/data/pdb/pdb_seqres.fasta


2) Splitting of the FASTA file to separate ".seq" files for each sequence, using HH-suite script "splitfasta.pl":
/mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/files$ export HHLIB='/mnt/project/aquaria/HHblits_Psi-BLAST_compare/scripts/hhsuite-2.0.13'
/mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/files$ /mnt/project/aquaria/HHblits_Psi-BLAST_compare/scripts/hhsuite-2.0.13/scripts/splitfasta.pl pdb_non_redundant_chains.fas 
Created 53582 sequence files


3) Building profiles (a3m output) running HHblits against UniProt20 using the PDB sequences received in 2) as input:
a) Writing all 53582 HHblits commands to one file with script "write_cmds_hhblits.sh":
/mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/files$ for file in $(ls *.seq); do echo "hhblits -i $PWD/$file -d /var/tmp/rost_db/data/hhblits/uniprot20_current -oa3m $PWD/${file:0:6}.a3m" >> /mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/scripts/cmds_hhblits.txt; done
   [later: writing only the failed and remaining commands to file cmds_hhblits.txt (with script "print_missing_cmds_hhblits.sh")]
b) Creating a master script ("master_submit.pl"), which creates and submits an array-job script to run the HHblits commands parallelly on the cluster in portions of 549 commands (editting in the array-job script: #$ -t 'from'-'to' - lines of the command file)


* Jobs with error message: track the error (Killed and other) and how much:
$tcsh
n03:/mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/log/hhblits> foreach file ( ` find . -name 'hhblits_cluster*.sh.e*' -size +1c` )
foreach? grep -v "Killed" $file >> not_killed_error.txt
foreach? grep "Killed" $file >> killed.txt
foreach? end


4) Adding PSIPRED secondary structure prediction to all MSAs received in 3) with HH-suite script "addss.pl": (output of a3ms with PSIPRED prediction to another directory "psipred_a3m")
using "multithread.pl":
mnt/project/aquaria/HHblits_Psi-BLAST_compare/scripts/hhsuite-2.0.13$ export HHLIB=$PWD 
/mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/files$ mkdir $PWD/psipred_a3m
/mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/files$ /mnt/project/aquaria/HHblits_Psi-BLAST_compare/scripts/hhsuite-2.0.13/scripts/multithread.pl './*.a3m' '/mnt/project/aquaria/HHblits_Psi-BLAST_compare/scripts/hhsuite-2.0.13/scripts/addss.pl $file $PWD/psipred_a3m/$base.a3m  1>/mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/log/addss/$base.out 2>>/mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/log/addss/$base.err' -cpu 10 

--> 280 a3ms only with 'X' (left by "pdb2fasta.non_redundant_chains_AS.pl" and PSIPRED gave out an error:) filtered; 53302 a3ms left in ".../pdb_full/files/psipred_a3m/". 


5) Generating pdb_full database files with HH-suite script "hhblitsdb.pl" and the MSAs with PSIPRED prediction received in 4) as input: (run on jobtest, as "hhblitsdb.pl" uses "multithread.pl")
$ mkdir /mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/db
/mnt/project/aquaria/HHblits_Psi-BLAST_compare/scripts/hhsuite-2.0.13$ export HHLIB=$PWD
/mnt/project/aquaria/HHblits_Psi-BLAST_compare/scripts/hhsuite-2.0.13/scripts$ ./hhblitsdb.pl -o '/mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/db/pdb_full' -ia3m '/mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/files/psipred_a3m/' -cpu 10 -log /mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/log/hhblitsdb/hhblitsdb.log


=====
=====
After pdb_full generation:

1) HHblits against UniProt20 with any UniProt query, with HMM output -ohhm:
*$ hhblits -i 1mbs_A.fas -d /mnt/project/rost_db/data/hhblits/uniprot20_current -ohhm 1mbs_A-uniprot.hhm [-oa3m 1mbs_A-uniprot.a3m -o 1mbs_A-uniprot.hhr]

2) With HMM output from 1) as input, HHblits against pdb_full, with -hhr output:
*$ hhblits -d ./mini_pdb_full -i 1mbs_A-uniprot.hhm -o 1mbs_A-uniprot-mini.hhr

3) parse the hhr output for IDs, identity ... and alignment gapless-blocks (see Andrea's last Email on Sean, database scheme on google and Sean's decision?) with my parser: 
*$ mnt/project/aquaria/HHblits_Psi-BLAST_compare/pdb_full/scripts/parse_hhr.pl -i <hhr output from 2)> -o <output file>

-> script ".../scripts/pssh2/generate_pssh2.pl" does the steps, uses the parser ".../scripts/pssh2/parse_hhr.pl" in the third step, which 
uses the mapping file ".../pdb_full/files/pdb_redundant_chains-md5-seq-mapping" of ".../pdb_full/files/pdb_non_redundant_chains.fas" in format:
pdb_chain [pdb_chains_with_same_SEQRES_sequence(space_delimited)]	md5sum_of_sequence	sequence
The parser wrotes the desired output in a file:
uniprot_sequence_md5sum,pdb_seqres_md5sum,probability,E-value,identity,alignment

-> wrapper master script ".../scripts/pssh2/submit_generate_pssh2.sh", which submits "generate_pssh2.pl" with each UNIQ UniProt sequence (first swissprot, 
then also trembl), that is with same MD5-sum (here the MD5-sum of the UniProt query is given to the script "generate_pssh2.pl") on the cluster in portions.
All cmds for the master script are in ".../scripts/pssh2/cmds.txt" (generated with ".../scripts/pssh2/generate_cmds.sh").
Uses already single uniq sequences for each md5sum from swissprot in "/mnt/project/mamut/md5/fasta/<md5sum>" and a file with the md5sums "/mnt/project/aquaria/HHblits_Psi-BLAST_compare/sprot" (copy of "/mnt/project/mamut/app/sprot" TODO: copy the updated file and update cmds.txt!!!!!), see below.

Number of all swissprot sequences in file "/mnt/project/rost_db/data/swissprot/uniprot_sprot.fasta": 537.505
Number of uniq swissprot sequences in the directory "/mnt/project/mamut/md5/fasta/" (and in the file "/mnt/project/mamut/mapping/md5:seq_swissprot"): 452.303
(Swiss-Prot update 30 Sep: 537.505 (452.303 unique) sequences)

For update: /mamut/bin/fasta_to_fastas.md5.rb
das erzeugt fuer multifasta je eine datei pro md5sum, die auch gleich die md5sum als namen hat, vorsicht arbeitet im aktuellen verzeichniss, sollte nicht nfs sein

=====
=====
UniProt filtering of Manfred Roos:
- map: md5sum : sequence
/mnt/project/mamut/mapping/md5:seq_swissprot
cat /mnt/project/rost_db/data/swissprot/uniprot_sprot.fasta |/mnt/project/mamut/bin/fasta_to_md5+sequence.rb > md5:seq_swissprot
cat /mnt/project/rost_db/data/trembl/uniprot_trembl.fasta |/mnt/project/mamut/bin/fasta_to_md5+sequence.rb > md5:seq_trembl
- get uniq sequences:
cat file |sort |uniq > file2
- to get only the first column of a file:
cat file| _line_part.rb 0
-already single uniq sequences for each md5sum:
/mnt/project/mamut/md5/fasta/<md5sum>
-md5sums swissprot sorted and uniq in file:
/mnt/project/mamut/app/sprot
for submitting, for example:
for i in `head -1000 /mnt/project/mamut/app/sprot |tail -1000` ; do ..... ; done

md5 sum script of Manfred:
/mnt/project/mamut/bin/fasta_to_md5+sequence.rb
example usage:
~/test_pssh2/pdb_full_creation/db/mini_pdb$ cat 1mbs_A.fas|/mnt/project/mamut/bin/fasta_to_md5+sequence.rb
c39a37b013300756a4d81f72ebfe8149	GLSDGEWHLVLNVWGKVETDLAGHGQEVLIRLFKSHPETLEKFDKFKHLKSEDDMRRSEDLRKHGNTVLTALGGILKKKGHHEAELKPLAQSHATKHKIPIKYLEFISEAIIHVLHSKHPAEFGADAQAAMKKALELFRNDIAAKYKELGFHG
