#!/bin/bash

### runs pssh2 for a set of md5 sums
#$ -o /dev/null
#$ -e /dev/null

#set -x


usage()
{
cat << EOT
NAME
  pssh2_wrapper - generate pssh2 type sequence-to-structrue alignments for many sequences given md5 sums
SYNOPSIS
  pssh2_wrapper [-h] [-D] [-F] [-R] -m \"md5 input list\"
DESCRIPTION
  pssh2_wrapper takes md5 sums from the command line,
  gets the associated sequence from the database,
  and runs pssh2 for each of the sequences (which adds the alignment to the database).
  See pssh2_seq -h for more details on pssh2_seq
OPTIONS
  -h          The option -h displays help and exits.
  important options passed on to pssh2_seq:
  -D          Debug option: do not remove or zip output files 
  -F          Force remaking of HMM profile (run build_hhblits_profile) (is default behaviour)
  -R          Retain (DO NOT remake) the HMM profile (do not run build_hhblits_profile unless necessary)
  -s          Operate silently
  any other parameters are also passed on to the child scripts
AUTHOR
  Andrea Schafferhans <andrea.schafferhans@rostlab.org>
EOT
}

debug=0
passOpt=" " 
while getopts:Dhm: opt
do
	case $opt in
	D) debug=1; passOpt="$passOpt $opt";; 
	h) usage; exit;;
	m) md5list=$OPTARG;;
	*) passOpt="$passOpt $opt";;
	esac
done

if [ $debug -eq 1 ]
then
	set -x
fi


### base path to cache
p_cache="/mnt/project/pssh/pssh2_project/data/pssh2/result_cache/"

DB="/var/tmp/rost_db/data";
T="/tmp/pssh2"

for md5 in $md5list ; do

### get fasta and tmpdir block
	mkdir -p $T/$md5  2>/dev/null
	chmod 777 $T  $T/$md5
	if [ -s $T/$md5/$md5.fasta ] 
	then
		ls -l $T/$md5/$md5.fasta
	else
		get_fasta_for_md5 $md5
	fi

	if [ -s $T/$md5/$md5.fasta ] 
	then
		# get subdir names for cache structure
		M=`echo $md5|cut -b1,2`
		M2=`echo $md5|cut -b3,4`
		echo $md5 $M $M2

### full path to cachedir
		CC="$p_cache$M/$M2/"
		echo $CC

### create cachedir if not existent
		mkdir -p $CC
		if [ -d $CC ] ; then
			cd $CC
#			pwd
#			ls -lahtr
			cp  $T/$md5/$md5.fasta query.fasta
			/mnt/project/pssh/pssh2_project/src/pssh2/pssh2_seq $passOpt
#			pssh2_seq $passOpt
			cd $T
		else 
			echo "ERROR: was not able to work on cache for $CC please go fix"
		fi
	
	else
	
		s=`date +%s`
		DB.pssh2_local "insert into pssh2_local.pssh2_counts set md5=\"$i\" , count=-99 , stamp=$s , runtime=$SECONDS" 
		echo "ERROR: could not find sequence: $T/$md5/$md5.fasta"

	fi

done
