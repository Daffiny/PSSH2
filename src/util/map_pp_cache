#!/bin/bash

# create links from fake pp_cache to local pssh2 directory

#$ -o /dev/null
#$ -e /dev/null

# set -x

### base path to all caches
fake_cache="/mnt/project/snapcache/andrea_pssh/all_caches/"
#h_cache="/mnt/project/pssh/pssh2_project/data/pssh2/result_cache/"
h_cache="/mnt/project/psshcache/result_cache/"
# for testing --> but then set to copy instead of moving
# fake_cache="/mnt/project/snapcache/andrea_pssh/test_caches/"
# h_cache="/mnt/project/pssh/pssh2_project/data/pssh2/test_cache/"
# fake_cache="/mnt/project/pssh/pssh2_project/work/mixed_up_pssh2_result_cache/"

# crawl over fake_cache to get out pssh results
for p in $fake_cache/??/
do
#	for pp in $p/2?/
	for pp in $p/??/
	do
		for ppp in $pp/*/ 
		do		
			hmmfile=$ppp/query.uniprot20.hhm
			psshfile=$ppp/query.pssh2
			# check we have the right kind of data
			if [ -s $psshfile ]
			then 
				md5=`head -1 $psshfile | cut -d ',' -f 1 `
#				echo "INFO: found $md5 in $psshfile"
			elif [ -s $hmmfile ]
			then
				echo "WARNING: no $psshfile found, reading in $hmmfile"

				# since query.fasta is not there, get the sequence out of the hmm
				seq_begin=`grep -n '^>query' $hmmfile | cut -d ':' -f 1`

				# get the md5 sum of the sequence
				if [ -z $seq_begin ]
				then
#					echo "WARNING: no >query in $hmmfile -> looking for sequence name"
					md5=`grep "^>[[:alnum:]]\{32\}" $hmmfile | cut -c 2-33`
#					echo "INFO: found $md5 in sequence name"
				else
					hmm_begin=`grep -n '^#' $hmmfile | cut -d ':' -f 1`
					md5=`head -$hmm_begin $hmmfile | tail -n +$seq_begin | /mnt/project/pssh/pssh2_project/src/pssh2/fasta_to_md5 | head -1`
#					echo "INFO: found $md5 for sequence from $seq_begin to $hmm_begin : "
#					head -$hmm_begin $hmmfile | tail -n +$seq_begin
				fi
				seq_begin=''
				hmm_begin=''
			fi
			
			if [ -z $md5 ]
			then
				echo "INFO: $ppp does not contain anything usable from pssh2 -> skipping"
			else
				### build prefixes for md5 (hhblits/pssh cache)
				M=`echo $md5|cut -b1,2`
				M2=`echo $md5|cut -b3,4`
				# echo $pp $md5 $M $M2
				HH="$h_cache$M/$M2/$md5"

				if [ -d $HH ]
				then
					echo "WARINING: $HH already exists, skipping $ppp $md5 to avoid overwriting"
				else
					mkdir -p $HH
					if [ -d $HH ]
					then
#						echo "INFO: moving from $ppp to $HH"
						# copy input file 
						# -- has only sometimes been copied to fake cache
						cp $ppp/query.fasta $HH/
						# move intermediary files
						mv $ppp/*uniprot20* $HH/
						# move output file
						mv $ppp/query.pssh2 $HH/
#						ln -s $HH/* $ppp

#  for testing (comment out above, uncomment this):
#						cp $ppp/query.fasta $HH/
#						cp $ppp/*uniprot20* $HH/
#						cp $ppp/query.pssh2 $HH/
#						echo "ln -s $HH/* $ppp/"
					else 
						echo "ERROR: was not able to write to $HH (for $ppp)"
					fi
				fi
			fi
			md5=''
		done
	done
done
