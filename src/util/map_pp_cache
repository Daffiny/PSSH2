#!/bin/bash

# create links from fake pp_cache to local pssh2 directory

#$ -o /dev/null
#$ -e /dev/null

set -x

### base path to all caches
#### ex /mnt/project/snapcache/andrea_pssh/ppcache22/bd/38/
fake_cache="/mnt/project/snapcache/andrea_pssh/test_caches/"
h_cache="/mnt/project/pssh/pssh2_project/data/pssh2/test_cache/"

# crawl over fake_cache to get out pssh results
for p in $fake_cache/??/
do
	for pp in $p/??/
	do
		for ppp in $pp/*/ 
		do		
			hmmfile=$ppp/query.uniprot20.hhm
			# check we have the right kind of data
			if [ -s $hmmfile ]
			then
				seq_begin = `grep -n '^>query' $hmmfile | cut -d ':' -f 1`
				hmm_begin = `grep -n '^#' $hmmfile | cut -d ':' -f 1`
				head -$hmm_begin $hmmfile | tail -n $seq_begin > $tmp_seqfile
				# get the md5 sum of the sequence
				md5=`cat $seqfile | /mnt/project/pssh/pssh2_project/src/pssh2/fasta_to_md5 | head -1`
	
				### build prefixes for md5 (hhblits/pssh cache)
				M=`echo $md5|cut -b1,2`
				M2=`echo $md5|cut -b3,4`
				# echo $pp $md5 $M $M2
				HH="$h_cache$M/$M2/md5"

				if [ -d $HH ]
				then
					echo "WARINING: $HH already exists, skipping $ppp $md5 to avoid overwriting"
				else
					mkdir -p $HH
					if [ -d $HH ]
					then
						# move input file
#						mv $ppp/query.fasta $HH/
						# move intermediary files
#						mv $ppp/*uniprot20* $HH/
						# move output file
#						mv $ppp/query.pssh2 $HH/
#						ln -s $HH/* $ppp
						echo "mv $ppp/query.fasta $HH/"
						echo "mv $ppp/*uniprot20* $HH/"
						echo "mv $ppp/query.pssh2 $HH/"
						echo "ln -s $HH/* $ppp/"
						else 
						echo "ERROR: was not able to write to $HH "
					fi
				fi
			else
				echo "INFO: $pp does not contain pssh2 output -> skipping"
			fi
		done
	done
done
