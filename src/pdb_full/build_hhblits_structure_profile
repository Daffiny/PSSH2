#!/bin/bash

if [ -z "$conf_file" ]; then
	conf_file='/etc/pssh2.conf'
fi

usage()
{
cat << EOT
NAME
  build_hhblits_structure_profile - generate a hhblits aligment file (called a3m) for a pdb sequence
SYNOPSIS
  build_hhblits_structure_profile [-R|-F n] [-s] [-h] [-D]  <-p pathToWorkOn> 
DESCRIPTION
  build_hhblits_profile takes an input sequence,
  calls build_hhblits_profile to scan agains uniprot20 and generate an a3m alignment, 
  then it  runs addss.pl on the a3m file (based on the best pdb structure for the sequence),
  producing a new a3m file including the secondary structure.
  Any input behind "--" is passed on build_hhblits_profile 
OPTIONS
  -h          The option -h displays help and exits.
  -D          Debug option: do not remove or zip output files
  -F n        Set force remaking status for making of HMM profile (run build_hhblits_profile):
     0           do not make profile unless none exists
     1           run only if the profile is older than the last update of uniprot20 (default)
     2           always run, even if the profile exists 
  -R          Retain (DO NOT remake) the HMM profile (same as -F 0)
  -s          Operate silently 
AUTHOR
  Andrea Schafferhans <andrea.schafferhans@rostlab.org>
EOT
exit 1
}


pdb_full_status_table="pdb_full_status"
pa3mfile='query.uniprot20.psipred.a3m' 
a3mfile='query.uniprot20.a3m' 


debug=0
passOpt=" " 
add=1
silent=0
while getopts :sDF:Rahp: opt
do
	case $opt in
	D) debug=1;; 
	F) force=$OPTARG;;
	R) force=0;;
	h) usage; echo " "; build_hhblits_profile -h; exit;;
	a) add=1;; 
	s) silent=1; debug=0; passOpt="$passOpt -$opt";;
	p) path=$OPTARG;;
	:)  echo "Error: -$OPTARG requires an argument"; usage; exit 1;;
	esac
done

if [ $debug -eq 1 ]
then
	set -x
fi

shift $(expr $OPTIND - 1 )
passOpt="$passOpt $@"

cd $path
skip=0

if [ $force -le 1 ] 
then
# check whether we already have a psipred a3m
	if [ -s $pa3mfile ] 
	then
		pa3m_stamp=`stat -c%Y $pa3mfile`
	   	if [ $force -eq 1 ] 
	    then
			db_stamp=`DB.pssh2_local "select last_update_stamp from database_status where name='uniprot20' order by last_update_stamp" | tail -1`
			if [ $pa3m_stamp -gt $db_stamp ]
			then
		    	skip=1
		    fi
		else
			skip=1
		fi
    	if [ $silent -eq 0 ]
    	then
	    	echo "psipred_a3m already made: $pa3m_stamp in "
			pwd
			if [ $skip -eq 1 ] 
			then
				echo "file will be used again"
			else
				echo "file will be remade"
			fi
		fi
	elif [ -s $a3mfile]
	then
		a3m_stamp=`stat -c%Y $a3mfile`
	   	if [ $force -eq 1 ] 
	    then
			db_stamp=`DB.pssh2_local "select last_update_stamp from database_status where name='uniprot20' order by last_update_stamp" | tail -1`
			if [ $a3m_stamp -gt $db_stamp ]
			then
		    	add='-a'
		    fi
		else
			add='-a'
		fi
    	if [ $silent -eq 0 ]
    	then
	    	echo "a3m already made: $a3m_stamp in "
			pwd
			if [ $add -eq '-a' ] 
			then
				echo "file will be used again"
			else
				echo "file will be remade"
			fi
		fi
	fi
fi




if [ -s $a3mfile]
then
	if [ $add -eq 1 ]
	then
		skip=1
	fi
fi	
if [ $skip -eq 0 ]
then
	time nice build_hhblits_profile -f  query.fasta -m  $hmmfile -a $a3mfile -r query.uniprot20.hhr $passOpt
else
	if [ $silent -eq 0 ]
 	then
		echo "skip making A3M."
	fi	
fi

if [ -s $a3mfile ] 
then
	# TODO: add the psipred stuff

else
	fail=-1
fi

# TODO set count to something sensible
count=0
DB.pssh2_local "insert into pssh2_local.$status_table set md5=\"$md5\" , count=$count , stamp=$s , runtime=0" 
