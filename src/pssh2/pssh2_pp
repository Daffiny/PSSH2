#!/bin/bash
## run the necessary things for pssh2 predictions
### run and parse hhblits

if [ -z "$conf_file" ]; then
	conf_file='/etc/pssh2.conf'
fi

usage()
{
cat << EOT
NAME
  pp_pssh2 - generate pssh2 type sequence-to-structrue alignments for PredictProtein
SYNOPSIS
  pp_pssh2 [-h] [-- ...]
DESCRIPTION
  wrapper around pssh2_seq: 
  operates silently (sets -s) 
  and writes to mysql table pssh2_pp (sets tableName to pssh2_pp),
  also communicates with the cache (getting data, storing data).
  Any other parameters behind "--" are passed on to the child scripts.
AUTHOR
  Andrea Schafferhans <andrea.schafferhans@rostlab.org>
EOT
}

### base path to cache
pssh2_cache="/mnt/project/psshcache/result_cache/"
# get configurable options, e.g. local file paths
if [ -s $conf_file ]
then
	source $conf_file
fi

# by default we want to use the system installation
# but if local_paths is set we have the option to change the path and instead use the local variants
if [ $local_paths ]
then
	PATH=$local_paths:$PATH
	export PATH
	echo "Using path: $PATH"
fi


silent=1
passOpt=" " 
while getopts :h opt
do
	case $opt in
	h) usage; echo " "; pssh2_seq -h; exit;;
#	*) passOpt="$passOpt -$opt";;
	esac
done
shift $(expr $OPTIND - 1 )
passOpt=$@

# get subdir names for cache structure
M=`echo $md5|cut -b1,2`
M2=`echo $md5|cut -b3,4`

### full path to cachedir
CC="$pssh2_cache$M/$M2/$md5"



pssh2_seq -s -t pssh2_pp $passOpt

# possibly delete more files... 