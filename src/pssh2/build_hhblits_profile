#!/bin/bash

# this script is used to sum up the parameters for a profile building hhblits in one place
# it is used by pp_pssh2 (for PredictProtein) and by the generate_pssh2 perl script

u20='/var/tmp/rost_db/data/hhblits/uniprot20_current'
#u20='/usr/share/hhblits/uniprot20_current'
big=''
reportedHits=" -B 10000 -Z 10000"
hhblitsLog='hhblits.log'

usage()
{
cat << EOT
NAME
  build_hhblits_profile - generate a hhblits HHM (called hhm) by scanning against uniprot_20 
SYNOPSIS
  pssh2_seq <-f fasta sequence file> <-m hmm file name> <-a a3m file name> <-r results file name> 
  [-b] [-u /path/to/uniprot_20] [-s (silent)]
DESCRIPTION
  build_hhblits_profile takes an input sequence,
  searches against the uniprot20 database of HMMs 
  and generates a HHM output (HMM-profile) as well as 
  an a3m file of the alignment and
  a result file containing details of the search
  2) scan_structures_hhblits: starting with the HHM output from step 1,
      search against the pdb_full database of HMMs and generate a HHR ouput
  Subsequently, it parses the HHR output from the second run using the "parse_hhr_for_pssh2" 
  perl script and generates a .pssh2 file.
  Finally, this outputfile is read into the MySQL database pssh2_local, 
  using "DB.pssh2_local" to retrieve the access parameters.
  The database pssh2_local_counts keeps track of the generation date of the data, the runtime
  and the number of hits found for the sequence. Negative count number indicate error states:
    -1 -> build_hhblits_profile, -2 -> scan_structures_hhblits, -3 -> parse_hhr_for_pssh2, 
    -99 -> sequence not found
  Any input not mentioned in options is passed on to 1) and 2). 
  The databases to search with hhblits should be available under /var/tmp/rost_db/data/hhblits/
  unless they are explicitly given in the input.
OPTIONS
  -h          The option -h displays help and exits.
  -D          Debug option: do not remove or zip output files
  -F          Force remaking of HMM profile (run build_hhblits_profile) (is default behaviour)
  -R          Retain (DO NOT remake) the HMM profile (do not run build_hhblits_profile unless necessary)
  -s          Operate silently (passed on to the child scripts.)
  any other parameters are also passed on to the child scripts
AUTHOR
  Andrea Schafferhans <andrea.schafferhans@rostlab.org>
EOT
}



usage() { 
	echo "Usage: $0 -f <fasta sequence file> -m <hmm file name> -a <a3m file name> -r <results file name>" 
	echo "                           [-b (for much memory)] [-u /path/to/uniprot_20 (without extensions)] [-s (silent)]"
	echo "                           (default path: $u20)" 1>&2
	exit 1; 
}


while getopts "f:m:a:r:bu:hs" option;
do
 case $option in
  f)
   # expects fasta formatted input file
   fasta=$OPTARG;
   hhblitsLog=$fasta.$hhblitsLog
   ;;
  m)
   # name of output file for hmm 
   hhm=$OPTARG;
   ;;
  a)
   # name of output file for a3m 
   a3m=$OPTARG;
   ;;
  r)
   # name of output file for hhblits results  
   hhr=$OPTARG;
   ;;
  u)
   # path for uniprot_20 for hhblits
   u20=$OPTARG;
   ;;
  b)
	echo 'received -b, setting option -maxmem 5'
  	b='-maxmem 5 '
   ;;
  :)
   echo "option -$OPTARG needs an argument"
   usage
   ;;
  h)
   usage  	
   ;;
  s)
   hhblitsLog='/dev/null'  	
   ;;
  *)
   echo "invalid option -$OPTARG" 
   usage
   ;;
 esac
done

if  [ -z "$fasta" -o -z "$hhm" -o -z "$a3m" -o -z "$hhr" ]; 
then
	usage
fi

#echo "running hhblits -cpu 1 -i $fasta -d $u20 -ohhm $hhm -oa3m $a3m -o $hhr $b $reportedHits"
hhblits -cpu 1 -i $fasta -d $u20 -ohhm $hhm -oa3m $a3m -o $hhr $b $reportedHits >> $hhblitsLog




